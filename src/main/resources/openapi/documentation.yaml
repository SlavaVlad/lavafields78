openapi: "3.0.3"
info:
  title: "productserver7 API"
  description: "productserver7 API"
  version: "1.0.0"
servers:
- url: "https://productserver7"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /command:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/Command"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExecutionResult"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Cannot deserialize command"
                Example#2:
                  value: ""
  /hello:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
    post:
      description: "authenticate(\"auth-form\") { <br> route(\"/login\") { <br> get\
        \ { <br> val userName = call.principal<UserIdPrincipal>()?.name.toString()\
        \ <br> call.sessions.set(UserSession(name = userName, count = 1)) <br> } <br>\
        \ post { <br> val userName = call.principal<UserIdPrincipal>()?.name.toString()\
        \ <br> call.sessions.set(UserSession(name = userName, count = 1)) <br> } <br>\
        \ } <br> } <br> authenticate(\"auth-session\") {"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
components:
  schemas:
    Command:
      type: "object"
      properties:
        name:
          type: "string"
        args:
          type: "array"
          items:
            type: "string"
    ExecutionResult:
      type: "object"
      properties:
        message:
          type: "string"
        error:
          type: "string"